{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\GitHub\\\\Expensse Tracker\\\\myexpensetracker\\\\frontend\\\\src\\\\Components\\\\Charts\\\\Charts.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Chart as ChartJs, CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { styled } from 'styled-components';\nimport { dateFormat } from '../../utilis/dateFormat';\nimport { useGlobalContext } from '../../context/globalContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend, ArcElement);\nfunction Charts() {\n  _s();\n  const {\n    incomes,\n    expenses\n  } = useGlobalContext();\n  const data = {\n    labels: incomes.map(inc => {\n      const {\n        date\n      } = inc;\n      return dateFormat(date);\n    }),\n    datasets: [{\n      label: 'Income',\n      data: [...incomes.map(income => {\n        const {\n          amount\n        } = income;\n        return amount;\n      })],\n      backgroundColor: 'green'\n    }, {\n      label: 'Expenses',\n      data: [...expenses.map(expense => {\n        const {\n          amount\n        } = expense;\n        return amount;\n      })],\n      backgroundColor: 'red'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ChartStyled, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Charts, \"rmH05xl1MGYpe0iq6SPQSKJKa1s=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Charts;\nconst ChartStyled = styled.div`\n background:#FCF6F9;\n border:2px solid #FFFFFF;\n box-shadow:0px 1px 15px rgba(0,0,0,0.06);\n padding:1rem;\n border-radius:20px;\n height:500px;\n\n`;\n_c2 = ChartStyled;\nexport default Charts;\nvar _c, _c2;\n$RefreshReg$(_c, \"Charts\");\n$RefreshReg$(_c2, \"ChartStyled\");","map":{"version":3,"names":["React","Chart","ChartJs","CategoryScale","LinearScale","LineElement","PointElement","Title","Tooltip","Legend","ArcElement","Line","styled","dateFormat","useGlobalContext","jsxDEV","_jsxDEV","register","Charts","_s","incomes","expenses","data","labels","map","inc","date","datasets","label","income","amount","backgroundColor","expense","ChartStyled","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/GitHub/Expensse Tracker/myexpensetracker/frontend/src/Components/Charts/Charts.js"],"sourcesContent":["import React from 'react'\r\nimport {Chart as ChartJs,CategoryScale,LinearScale,LineElement,PointElement,Title,Tooltip,Legend,ArcElement} from 'chart.js'\r\nimport {Line} from 'react-chartjs-2'\r\nimport { styled } from 'styled-components'\r\nimport { dateFormat } from '../../utilis/dateFormat';\r\nimport { useGlobalContext } from '../../context/globalContext';\r\n\r\nChartJs.register(\r\nCategoryScale,\r\nLinearScale,\r\nLineElement,\r\nPointElement,\r\nTitle,\r\nTooltip,\r\nLegend,\r\nArcElement\r\n)\r\n function Charts() {\r\n    \r\n   const {incomes,expenses} = useGlobalContext()\r\n\r\n    const data= {\r\n        labels: incomes.map((inc) =>{\r\n            const {date} = inc\r\n            return dateFormat(date)\r\n        }),\r\n        datasets:[\r\n           {label:'Income',\r\n               data:[\r\n                ...incomes.map((income) => {\r\n                    \r\n                    const{amount}=income\r\n                    return amount\r\n                })\r\n               ],\r\n               backgroundColor:'green'\r\n\r\n           },\r\n           {label:'Expenses',\r\n               data:[\r\n                ...expenses.map((expense) => {\r\n                    \r\n                    const{amount}=expense\r\n                    return amount\r\n                })\r\n               ],\r\n               backgroundColor:'red'\r\n\r\n           }        \r\n\r\n        ]\r\n         \r\n\r\n    }\r\n\r\n  return (\r\n    <ChartStyled>\r\n     <Line data={data}/>\r\n    </ChartStyled>\r\n  )\r\n}\r\n\r\nconst ChartStyled = styled.div`\r\n background:#FCF6F9;\r\n border:2px solid #FFFFFF;\r\n box-shadow:0px 1px 15px rgba(0,0,0,0.06);\r\n padding:1rem;\r\n border-radius:20px;\r\n height:500px;\r\n\r\n`;\r\nexport default Charts"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,KAAK,IAAIC,OAAO,EAACC,aAAa,EAACC,WAAW,EAACC,WAAW,EAACC,YAAY,EAACC,KAAK,EAACC,OAAO,EAACC,MAAM,EAACC,UAAU,QAAO,UAAU;AAC5H,SAAQC,IAAI,QAAO,iBAAiB;AACpC,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,gBAAgB,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/Dd,OAAO,CAACe,QAAQ,CAChBd,aAAa,EACbC,WAAW,EACXC,WAAW,EACXC,YAAY,EACZC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UACA,CAAC;AACA,SAASQ,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAEhB,MAAM;IAACC,OAAO;IAACC;EAAQ,CAAC,GAAGP,gBAAgB,CAAC,CAAC;EAE5C,MAAMQ,IAAI,GAAE;IACRC,MAAM,EAAEH,OAAO,CAACI,GAAG,CAAEC,GAAG,IAAI;MACxB,MAAM;QAACC;MAAI,CAAC,GAAGD,GAAG;MAClB,OAAOZ,UAAU,CAACa,IAAI,CAAC;IAC3B,CAAC,CAAC;IACFC,QAAQ,EAAC,CACN;MAACC,KAAK,EAAC,QAAQ;MACXN,IAAI,EAAC,CACJ,GAAGF,OAAO,CAACI,GAAG,CAAEK,MAAM,IAAK;QAEvB,MAAK;UAACC;QAAM,CAAC,GAACD,MAAM;QACpB,OAAOC,MAAM;MACjB,CAAC,CAAC,CACF;MACDC,eAAe,EAAC;IAEpB,CAAC,EACD;MAACH,KAAK,EAAC,UAAU;MACbN,IAAI,EAAC,CACJ,GAAGD,QAAQ,CAACG,GAAG,CAAEQ,OAAO,IAAK;QAEzB,MAAK;UAACF;QAAM,CAAC,GAACE,OAAO;QACrB,OAAOF,MAAM;MACjB,CAAC,CAAC,CACF;MACDC,eAAe,EAAC;IAEpB,CAAC;EAKR,CAAC;EAEH,oBACEf,OAAA,CAACiB,WAAW;IAAAC,QAAA,eACXlB,OAAA,CAACL,IAAI;MAACW,IAAI,EAAEA;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAElB;AAACnB,EAAA,CA3CSD,MAAM;EAAA,QAEcJ,gBAAgB;AAAA;AAAAyB,EAAA,GAFpCrB,MAAM;AA6ChB,MAAMe,WAAW,GAAGrB,MAAM,CAAC4B,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GARIR,WAAW;AASjB,eAAef,MAAM;AAAA,IAAAqB,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}